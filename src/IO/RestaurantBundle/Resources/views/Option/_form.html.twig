<div id="optionProto" class="hidden">
{% include 'IORestaurantBundle:Option:_formOption.html.twig' with {form:form.children.vars.prototype, option:null} %}
</div>
<form class="menu-form" action="{{ action_path }}" method="POST" {{ form_enctype(form) }}>
    <div class="form-group">
        {{ form_row(form.name) }}
    </div>
    <div class="options" data-prototype="#optionProto">
        <h5>Choix</h5>
        {% for optionForm in form.children %}
        <div class="option">
            {% include 'IORestaurantBundle:Option:_formOption.html.twig' with {form:optionForm, option:optionForm.vars.value} %}
        </div>
        {% endfor %}
    </div>
    {{ form_rest(form) }}
</form>
<script>
    // Récupère le div qui contient la collection de tags
    var collectionHolder = $('.options');
    var currentId = 100;

    // ajoute un lien « add a tag »
    var $addOptionLink = $('<a href="#" class="add_option_link">Ajouter un choix</a>');
    var $newLinkDiv = $('<div></div>').append($addOptionLink);

    function addOptionForm(collectionHolder, $newLinkLi) {
        // Récupère l'élément ayant l'attribut data-prototype comme expliqué plus tôt
        var prototype = $(collectionHolder.attr('data-prototype')).html();

        // Remplace '__name__' dans le HTML du prototype par un nombre basé sur
        // la longueur de la collection courante
        var newForm = prototype.replace(/__name__/g, currentId);
        currentId = currentId + 1;

        // Affiche le formulaire dans la page dans un li, avant le lien "ajouter une option"
        var $newFormDiv = $('<div class="option"></div>').append(newForm);
        $newLinkLi.before($newFormDiv);
        
        // ajoute un lien de suppression au nouveau formulaire
        addTagFormDeleteLink($newFormDiv);
    }

    function addTagFormDeleteLink($tagFormDiv) {
        var $removeFormBtn = $('<a href="#" class="btn btn-danger"><i class="fa fa-trash-o"></i> </a>');
        $tagFormDiv.prepend($removeFormBtn);

        $removeFormBtn.on('click', function(e) {
            // empêche le lien de créer un « # » dans l'URL
            e.preventDefault();

            // supprime l'élément li pour le formulaire de tag
            $tagFormDiv.remove();
        });
    }

    $(document).ready(function() {
        // ajoute l'ancre « ajouter un tag » et li à la balise ul
        collectionHolder.append($newLinkDiv);
        
        // ajoute un lien de suppression à tous les éléments li de
        // formulaires de tag existants
        collectionHolder.find('.option').each(function() {
            addTagFormDeleteLink($(this));
        });

        $addOptionLink.on('click', function(e) {
            // empêche le lien de créer un « # » dans l'URL
            e.preventDefault();

            // ajoute un nouveau formulaire tag (voir le prochain bloc de code)
            addOptionForm(collectionHolder, $newLinkDiv);
        });
    });
</script>
